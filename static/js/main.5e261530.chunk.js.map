{"version":3,"sources":["components/Button.js","App.js","components/Display.js","components/Numbers.js","components/Actions.js","reportWebVitals.js","index.js"],"names":["Button","props","className","action","primary","id","type","onClick","e","click","label","App","useState","currentValue","setCurrentValue","isInvalid","setInvalid","evaluateExpression","eval","updateExpression","value","updatedExpression","operations","lastChar","length","removeLastOperation","includes","lastOperationsIsSub","slice","values","split","current","clear","newValue","operation","href","target","rel","Display","Number","map","Actions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e261530.chunk.js","sourcesContent":["import './Button.css';\n\nexport default function Button(props) {\n    return (\n        <button\n            className={`button ${props.action ? 'action-button' : ''} ${props.primary ? 'primary-button' : ''}`}\n            id={props.id}\n            type=\"button\"\n            onClick={(e) => props.click(e)}\n        >{props.label}\n        </button>\n    );\n}\n","import './App.css';\nimport Display from './components/Display';\nimport Numbers from './components/Numbers';\nimport Actions from './components/Actions';\nimport Button from './components/Button';\nimport { useState } from 'react';\n\nfunction App() {\n  const [currentValue, setCurrentValue] = useState('0');\n  const [isInvalid, setInvalid] = useState(false);\n\n  function evaluateExpression() {\n    if (!isInvalid) {\n      try {\n        setCurrentValue(eval(currentValue));\n      } catch (e) {\n        setCurrentValue('Invalid expression');\n        setInvalid(true);\n      }\n    } else {\n      setCurrentValue('0');\n      setInvalid(false);\n    }\n  }\n\n  function updateExpression(value) {\n    let updatedExpression = value;\n    if (isInvalid) {\n      setInvalid(false);\n    } else {\n      // Does not allow two consecutive operator, except for negative sign\n      const operations = ['+', '*', '/', '-'];\n      const lastChar = currentValue[currentValue.length - 1];\n      const removeLastOperation = operations.includes(value) && operations.includes(lastChar) && value !== '-';\n      const lastOperationsIsSub = lastChar === '-';\n\n      if (currentValue === '0' && value !== '.') {\n        updatedExpression = value;\n      } else {\n        updatedExpression = (removeLastOperation ? currentValue.slice(0, lastOperationsIsSub ? -2 : -1) : currentValue) + value;\n      }\n    }\n\n    const values = updatedExpression.split(/[/+*-]/);\n    const last = values[values.length - 1];\n\n    // Does not allow tow or more dots (.) per number\n    if (last.split('.').length <= 2) {\n      setCurrentValue(updatedExpression);\n    }\n  }\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"display-panel\">\n        <Display current={currentValue} />\n        <Button id=\"equals\" primary={true} label=\"=\" click={evaluateExpression}/>\n      </div>\n      <div className=\"numbers-panel\">\n        <Numbers clear={() => setCurrentValue('0')} newValue={updateExpression} />\n        <Actions operation={updateExpression} />\n      </div>\n      <div className=\"credicts\">\n        Developed by \n        <a href=\"https://github.com/thiagobitencourt/js-calculator\" target=\"_blank\" rel=\"noreferrer\">\n          Thiago Bitencourt\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import './Display.css';\n\nexport default function Display(props) {\n    return (\n        <div className=\"display\">\n            <div id=\"display\" className=\"value\">{props.current}</div>\n        </div>\n    );\n}\n","import Button from './Button';\nimport './Numbers.css';\n\nexport default function Number(props) {\n    return (\n        <div className=\"numbers\">\n            {\n                [\n                    { value: '7', id: 'seven' },\n                    { value: '8', id: 'eight' },\n                    { value: '9', id: 'nine' },\n                    { value: '4', id: 'four' },\n                    { value: '5', id: 'five' },\n                    { value: '6', id: 'six' },\n                    { value: '1', id: 'one' },\n                    { value: '2', id: 'two' },\n                    { value: '3', id: 'three' },\n                    { value: '.', id: 'decimal' },\n                    { value: '0', id: 'zero' }\n                ].map(({ value, id }) => \n                        <Button key={id} id={id} click={() => props.newValue(value)} label={value}/>\n                    )\n            }\n            <Button id=\"clear\" action={true} click={() => props.clear()} label=\"c\"/>\n        </div>\n    );\n}\n","import Button from './Button';\nimport './Actions.css';\n\nexport default function Actions(props) {\n    return (\n        <div className=\"actions\">\n            <Button action={true} id=\"add\" label=\"+\" click={() => props.operation('+')} />\n            <Button action={true} id=\"subtract\" label=\"-\" click={() => props.operation('-')} />\n            <Button action={true} id=\"multiply\" label=\"*\" click={() => props.operation('*')} />\n            <Button action={true} id=\"divide\" label=\"/\" click={() => props.operation('/')} />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}